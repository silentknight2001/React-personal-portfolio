{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","HomeText","role","placeholder","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d6cbf2c9.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport default function Navbar(props) {\n    return (\n\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">{props.HomeText}</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/\">Link</a>\n                        </li>\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                Dropdown\n                            </a>\n                            <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\n                                <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\n                                <li><hr className=\"dropdown-divider\"/></li>\n                                <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\n                            </ul>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className= \"nav-link disabled\">Disabled</a>\n                        </li>\n                    </ul>\n                    <form className=\"d-flex\">\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n                    </form>\n                    <div className={`form-check form-switch  text-${props.mode==='light'?'dark':'light'}`}>\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">DarkMode</label>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nNavbar.propTypes= {titel: PropTypes.string,\n                         aboutText:PropTypes.string,}\n","import React, { useState } from \"react\";\n\n\nexport default function TextForm(props) {\n\n  const handleUpClick = () => {\n    // console.log(\"UpperCase was \" + text);\n\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Uppper case\", \"success\");\n\n  }\n\n  const handleLoClick = ()=> {\n\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Convert to Lower case\", \"success\");\n  }\n  const handleClearClick = ()=>{\n\n    let newText = '';\n    setText(newText);\n  }\n\n  const handlecopy =()=>{\n    \n    let text = document.getElementById(\"myBox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    props.showAlert(\"Copy\", \"success\");\n  }\n\n  const ExtraSpace =()=>{\n\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"removed extra-space\", \"success\");\n\n  }  \n \n\n  const handleOnChange = (event) => {\n    // console.log(\"on Change\")\n    setText(event.target.value)\n  };\n\n  const [text, setText] = useState('Enter text here');\n\n  return (\n    <>\n    <div className=\"container\" style={{color : props.mode==='dark'?'white':'black'}}>\n      <h1>{props.heading}</h1>\n      <div className=\"mb-3\">\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor : props.mode==='dark'?'black':'white', color : props.mode==='dark'?'white':'black'}}\n          id=\"myBox\" rows=\"8\"></textarea>\n      </div>\n      <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\n      <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\n      <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\n      <button className=\"btn btn-primary mx-2\" onClick={handlecopy}>Copy text</button>\n      <button className=\"btn btn-primary mx-2\" onClick={ ExtraSpace }>Remove-Extra Space</button>\n\n    </div>\n    <div className=\"container my-3\" style={{color : props.mode==='dark'?'white':'black'}}>\n      <h2>Your text summary</h2>\n      <p>{text.split(\" \").length} words and  {text.length} characters</p>\n      <p>{0.08 * text.split(\" \").length} minut's need to read</p>\n\n      <h3>Preview</h3>\n      <p>{text.length>0?text:\"Enter somting in the textBox above to preview it\"}</p>\n\n    </div>\n    </>\n  );\n}\n\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize =(word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n\n\n    }\n    return (\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\n            \n      </div>\n    )\n}\n\nexport default Alert;\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');  //weather darkMod Eneble or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{ //show Alert is a event/function \n    setAlert({     //..its means now alert is a object.....................\n      msg:message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n      \n    }, 1500);\n    \n  }\n\n  const toggleMode =()=>{\n    if(mode==='light'){\n\n      setMode('dark')\n      document.body.style.backgroundColor= 'black';\n      showAlert(\"DarkMode has been enable\", \"success\");\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor= 'white';\n      showAlert(\"Light has been enable\", \"success\");\n    }\n\n  }\n\n  return (\n    <>\n<Navbar title=\"helloworld\" HomeText=\"About us\" mode={mode} toggleMode={toggleMode}/>\n\n<Alert alert ={alert}/>\n\n<div className=\"container my-3\">\n<TextForm showAlert ={showAlert} heading =\"Enter the text analyzs below\" mode ={mode}/>\n  {/* <About/> */}\n</div>\n\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}